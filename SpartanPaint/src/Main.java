//import com.sun.prism.paint.Color;

import java.awt.Dimension;
import javafx.event.Event;
import javafx.event.EventHandler;
import javafx.scene.paint.Color;
//import javax.swing.JColorChooser;
import javafx.scene.control.ColorPicker;
import spartanpaint.*;

public class Main extends javax.swing.JFrame {

    public Main() {
        //System.setProperty("sun.awt.noerasebackground", "true");
        initComponents();
        CanvasPanel.SetInstance(CanvasApplet, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CanvasApplet = new spartanpaint.CanvasApplet();
        jToolBar1 = new javax.swing.JToolBar();
        clearCanvasButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        brushColorButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        CanvasScrollPane = new javax.swing.JScrollPane();
        CanvasPanel = new spartanpaint.PAppletPanel();
        MainMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        clearCanvasButton.setText("Clear Canvas");
        clearCanvasButton.setFocusable(false);
        clearCanvasButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clearCanvasButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        clearCanvasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCanvasButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(clearCanvasButton);

        jButton3.setText("Brush Size");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton3);

        brushColorButton.setText("Brush Color");
        brushColorButton.setFocusable(false);
        brushColorButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        brushColorButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        brushColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brushColorButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(brushColorButton);

        jButton2.setText("Eraser");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.NORTH);

        CanvasPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        CanvasScrollPane.setViewportView(CanvasPanel);

        getContentPane().add(CanvasScrollPane, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");
        MainMenuBar.add(jMenu1);

        jMenu2.setText("Edit");
        MainMenuBar.add(jMenu2);

        setJMenuBar(MainMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //This button shows a color chooser for the brush
    private void brushColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brushColorButtonActionPerformed
        CanvasApplet.brushColor = Color.RED; //CanvasApplet.color(85, 0, 85);
        
        //JColorChooser colorChooser = new JColorChooser(CanvasApplet.brushColor);
        final ColorPicker colorPicker = new ColorPicker();
        colorPicker.setOnAction(new EventHandler() {
     public void handle(Event t) {
         Color c = colorPicker.getValue();
         System.out.println("New Color's RGB = "+c.getRed()+" "+c.getGreen()+" "+c.getBlue());
     }
 });
    }//GEN-LAST:event_brushColorButtonActionPerformed

    //This button clears the canvas
    private void clearCanvasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCanvasButtonActionPerformed
        // TODO add your handling code here:
        CanvasApplet.fill(0, 2);
        CanvasApplet.stroke(255);
        CanvasApplet.rect(0,0,CanvasApplet.width,CanvasApplet.height);
    }//GEN-LAST:event_clearCanvasButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private spartanpaint.CanvasApplet CanvasApplet;
    private spartanpaint.PAppletPanel CanvasPanel;
    private javax.swing.JScrollPane CanvasScrollPane;
    private javax.swing.JMenuBar MainMenuBar;
    private javax.swing.JButton brushColorButton;
    private javax.swing.JButton clearCanvasButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}